//
// SettingsLicensing200ResponseLimits.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "kandji_sdkAPI.SettingsLicensing200ResponseLimits")
public typealias SettingsLicensing200ResponseLimits = kandji_sdkAPI.SettingsLicensing200ResponseLimits

extension kandji_sdkAPI {

@objcMembers public class SettingsLicensing200ResponseLimits: NSObject, Codable, JSONEncodable {

    public var planType: String?
    public var maxDevices: Int?
    public var maxDevicesNum: NSNumber? {
        get {
            return maxDevices as NSNumber?
        }
    }
    public var maxDevicesPerPlatform: SettingsLicensing200ResponseLimitsMaxDevicesPerPlatform?

    public init(planType: String? = nil, maxDevices: Int? = nil, maxDevicesPerPlatform: SettingsLicensing200ResponseLimitsMaxDevicesPerPlatform? = nil) {
        self.planType = planType
        self.maxDevices = maxDevices
        self.maxDevicesPerPlatform = maxDevicesPerPlatform
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case planType = "plan_type"
        case maxDevices = "max_devices"
        case maxDevicesPerPlatform = "max_devices_per_platform"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(planType, forKey: .planType)
        try container.encodeIfPresent(maxDevices, forKey: .maxDevices)
        try container.encodeIfPresent(maxDevicesPerPlatform, forKey: .maxDevicesPerPlatform)
    }
}

}
