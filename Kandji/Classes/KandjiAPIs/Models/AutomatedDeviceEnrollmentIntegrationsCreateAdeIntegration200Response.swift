//
// AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "kandji_sdkAPI.AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response")
public typealias AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response = kandji_sdkAPI.AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response

extension kandji_sdkAPI {

@objcMembers public class AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response: NSObject, Codable, JSONEncodable {

    public var accessTokenExpiry: String?
    public var adminId: String?
    public var blueprint: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseBlueprint?
    public var daysLeft: Int?
    public var daysLeftNum: NSNumber? {
        get {
            return daysLeft as NSNumber?
        }
    }
    public var defaults: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseDefaults?
    public var deviceCounts: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseDeviceCounts?
    public var _id: String?
    public var lastDeviceSync: AnyCodable?
    public var orgAddress: String?
    public var orgEmail: String?
    public var orgName: String?
    public var orgPhone: String?
    public var orgType: String?
    public var serverName: String?
    public var serverUuid: String?
    public var status: String?
    public var statusReason: AnyCodable?
    public var statusReceivedAt: AnyCodable?
    public var stokenFileName: String?

    public init(accessTokenExpiry: String? = nil, adminId: String? = nil, blueprint: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseBlueprint? = nil, daysLeft: Int? = nil, defaults: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseDefaults? = nil, deviceCounts: AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200ResponseDeviceCounts? = nil, _id: String? = nil, lastDeviceSync: AnyCodable? = nil, orgAddress: String? = nil, orgEmail: String? = nil, orgName: String? = nil, orgPhone: String? = nil, orgType: String? = nil, serverName: String? = nil, serverUuid: String? = nil, status: String? = nil, statusReason: AnyCodable? = nil, statusReceivedAt: AnyCodable? = nil, stokenFileName: String? = nil) {
        self.accessTokenExpiry = accessTokenExpiry
        self.adminId = adminId
        self.blueprint = blueprint
        self.daysLeft = daysLeft
        self.defaults = defaults
        self.deviceCounts = deviceCounts
        self._id = _id
        self.lastDeviceSync = lastDeviceSync
        self.orgAddress = orgAddress
        self.orgEmail = orgEmail
        self.orgName = orgName
        self.orgPhone = orgPhone
        self.orgType = orgType
        self.serverName = serverName
        self.serverUuid = serverUuid
        self.status = status
        self.statusReason = statusReason
        self.statusReceivedAt = statusReceivedAt
        self.stokenFileName = stokenFileName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case accessTokenExpiry = "access_token_expiry"
        case adminId = "admin_id"
        case blueprint
        case daysLeft = "days_left"
        case defaults
        case deviceCounts = "device_counts"
        case _id = "id"
        case lastDeviceSync = "last_device_sync"
        case orgAddress = "org_address"
        case orgEmail = "org_email"
        case orgName = "org_name"
        case orgPhone = "org_phone"
        case orgType = "org_type"
        case serverName = "server_name"
        case serverUuid = "server_uuid"
        case status
        case statusReason = "status_reason"
        case statusReceivedAt = "status_received_at"
        case stokenFileName = "stoken_file_name"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(accessTokenExpiry, forKey: .accessTokenExpiry)
        try container.encodeIfPresent(adminId, forKey: .adminId)
        try container.encodeIfPresent(blueprint, forKey: .blueprint)
        try container.encodeIfPresent(daysLeft, forKey: .daysLeft)
        try container.encodeIfPresent(defaults, forKey: .defaults)
        try container.encodeIfPresent(deviceCounts, forKey: .deviceCounts)
        try container.encodeIfPresent(_id, forKey: ._id)
        try container.encodeIfPresent(lastDeviceSync, forKey: .lastDeviceSync)
        try container.encodeIfPresent(orgAddress, forKey: .orgAddress)
        try container.encodeIfPresent(orgEmail, forKey: .orgEmail)
        try container.encodeIfPresent(orgName, forKey: .orgName)
        try container.encodeIfPresent(orgPhone, forKey: .orgPhone)
        try container.encodeIfPresent(orgType, forKey: .orgType)
        try container.encodeIfPresent(serverName, forKey: .serverName)
        try container.encodeIfPresent(serverUuid, forKey: .serverUuid)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(statusReason, forKey: .statusReason)
        try container.encodeIfPresent(statusReceivedAt, forKey: .statusReceivedAt)
        try container.encodeIfPresent(stokenFileName, forKey: .stokenFileName)
    }
}

}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension kandji_sdkAPI.AutomatedDeviceEnrollmentIntegrationsCreateAdeIntegration200Response: Identifiable {}
