//
// SettingsLicensing200Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "kandji_sdkAPI.SettingsLicensing200Response")
public typealias SettingsLicensing200Response = kandji_sdkAPI.SettingsLicensing200Response

extension kandji_sdkAPI {

@objcMembers public class SettingsLicensing200Response: NSObject, Codable, JSONEncodable {

    public var counts: SettingsLicensing200ResponseCounts?
    public var limits: SettingsLicensing200ResponseLimits?
    public var tenantOverLicenseLimit: Int?
    public var tenantOverLicenseLimitNum: NSNumber? {
        get {
            return tenantOverLicenseLimit as NSNumber?
        }
    }

    public init(counts: SettingsLicensing200ResponseCounts? = nil, limits: SettingsLicensing200ResponseLimits? = nil, tenantOverLicenseLimit: Int? = nil) {
        self.counts = counts
        self.limits = limits
        self.tenantOverLicenseLimit = tenantOverLicenseLimit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case counts
        case limits
        case tenantOverLicenseLimit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(counts, forKey: .counts)
        try container.encodeIfPresent(limits, forKey: .limits)
        try container.encodeIfPresent(tenantOverLicenseLimit, forKey: .tenantOverLicenseLimit)
    }
}

}
